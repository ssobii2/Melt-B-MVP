{
    "openapi": "3.1.0",
    "info": {
        "title": "MELT-B MVP API Documentation",
        "version": "1.0.0",
        "description": "MELT-B MVP API provides access to building thermal data, user management, and data download capabilities. This API supports authentication via Laravel Sanctum tokens and includes comprehensive endpoints for building data analysis, user entitlements, and administrative functions."
    },
    "servers": [
        {
            "url": "http://localhost/api"
        }
    ],
    "paths": {
        "/admin/analysis-jobs/stats": {
            "get": {
                "operationId": "analysisJob.stats",
                "summary": "Get statistics about analysis jobs",
                "tags": [
                    "AnalysisJob"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "total_jobs": {
                                            "type": "string"
                                        },
                                        "pending_jobs": {
                                            "type": "string"
                                        },
                                        "running_jobs": {
                                            "type": "string"
                                        },
                                        "completed_jobs": {
                                            "type": "string"
                                        },
                                        "failed_jobs": {
                                            "type": "string"
                                        },
                                        "recent_jobs": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AnalysisJobResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "total_jobs",
                                        "pending_jobs",
                                        "running_jobs",
                                        "completed_jobs",
                                        "failed_jobs",
                                        "recent_jobs"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/analysis-jobs": {
            "get": {
                "operationId": "analysis-jobs.index",
                "summary": "Display a listing of analysis jobs",
                "tags": [
                    "AnalysisJob"
                ],
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "analysis_jobs": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AnalysisJobResource"
                                            }
                                        },
                                        "pagination": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "string"
                                                },
                                                "last_page": {
                                                    "type": "string"
                                                },
                                                "per_page": {
                                                    "type": "string"
                                                },
                                                "total": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "last_page",
                                                "per_page",
                                                "total"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "analysis_jobs",
                                        "pagination"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "post": {
                "operationId": "analysis-jobs.store",
                "summary": "Store a new analysis job",
                "tags": [
                    "AnalysisJob"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "metadata": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "input_source_links": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "uri"
                                        },
                                        "minItems": 1
                                    }
                                },
                                "required": [
                                    "input_source_links"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "TODO: In the future, this is where we would call the science team's API\nFor now, we just create the database record",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Analysis job created successfully"
                                            ]
                                        },
                                        "analysis_job": {
                                            "$ref": "#/components/schemas/AnalysisJobResource"
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "analysis_job"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Validation failed"
                                            ]
                                        },
                                        "errors": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "errors"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/analysis-jobs/{id}": {
            "get": {
                "operationId": "analysis-jobs.show",
                "summary": "Display the specified analysis job",
                "tags": [
                    "AnalysisJob"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "analysis_job": {
                                            "$ref": "#/components/schemas/AnalysisJobResource"
                                        }
                                    },
                                    "required": [
                                        "analysis_job"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "put": {
                "operationId": "analysis-jobs.update",
                "summary": "Update the specified analysis job",
                "tags": [
                    "AnalysisJob"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "pending",
                                            "running",
                                            "completed",
                                            "failed"
                                        ]
                                    },
                                    "output_csv_url": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "format": "uri"
                                    },
                                    "external_job_id": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    },
                                    "error_message": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    },
                                    "metadata": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Analysis job updated successfully"
                                            ]
                                        },
                                        "analysis_job": {
                                            "$ref": "#/components/schemas/AnalysisJobResource"
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "analysis_job"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Validation failed"
                                            ]
                                        },
                                        "errors": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "errors"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "delete": {
                "operationId": "analysis-jobs.destroy",
                "summary": "Remove the specified analysis job",
                "tags": [
                    "AnalysisJob"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Analysis job deleted successfully"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Cannot delete running or pending jobs"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/audit-logs/stats": {
            "get": {
                "operationId": "auditLog.stats",
                "summary": "Get audit log statistics",
                "tags": [
                    "AuditLog"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "total_entries": {
                                            "type": "string"
                                        },
                                        "recent_entries": {
                                            "type": "string"
                                        },
                                        "by_action": {
                                            "type": "string"
                                        },
                                        "by_user": {
                                            "type": "string"
                                        },
                                        "recent_activities": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "total_entries",
                                        "recent_entries",
                                        "by_action",
                                        "by_user",
                                        "recent_activities"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/audit-logs/actions": {
            "get": {
                "operationId": "auditLog.actions",
                "summary": "Get unique actions for filter dropdown",
                "tags": [
                    "AuditLog"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "actions": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "actions"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/audit-logs/target-types": {
            "get": {
                "operationId": "auditLog.targetTypes",
                "summary": "Get unique target types for filter dropdown",
                "tags": [
                    "AuditLog"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "target_types": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "target_types"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/audit-logs": {
            "get": {
                "operationId": "auditLog.index",
                "summary": "Get a paginated list of audit log entries",
                "tags": [
                    "AuditLog"
                ],
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": 20
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "user_id",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "target_type",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date_from",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date_to",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AuditLogResource"
                                            }
                                        },
                                        "current_page": {
                                            "type": "string"
                                        },
                                        "per_page": {
                                            "type": "string"
                                        },
                                        "total": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "current_page",
                                        "per_page",
                                        "total"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/audit-logs/{id}": {
            "get": {
                "operationId": "auditLog.show",
                "summary": "Get details of a specific audit log entry",
                "tags": [
                    "AuditLog"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "audit_log": {
                                            "$ref": "#/components/schemas/AuditLogResource"
                                        }
                                    },
                                    "required": [
                                        "audit_log"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Audit log entry not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/register": {
            "post": {
                "operationId": "auth.register",
                "summary": "Register a new user",
                "tags": [
                    "Auth"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "maxLength": 255
                                    },
                                    "password": {
                                        "type": "string"
                                    },
                                    "role": {
                                        "type": "string",
                                        "enum": [
                                            "user",
                                            "researcher",
                                            "contractor",
                                            "municipality"
                                        ]
                                    },
                                    "password_confirmation": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Registration successful. Please verify your email address."
                                            ]
                                        },
                                        "user": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "email": {
                                                    "type": "string"
                                                },
                                                "role": {
                                                    "type": "string"
                                                },
                                                "email_verified_at": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "id",
                                                "name",
                                                "email",
                                                "role",
                                                "email_verified_at"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "user"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Validation failed"
                                            ]
                                        },
                                        "errors": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "errors"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "operationId": "auth.login",
                "summary": "Authenticate user and create token",
                "tags": [
                    "Auth"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "type": "string"
                                    },
                                    "token_name": {
                                        "type": "string",
                                        "description": "Create API token - always token-based now",
                                        "default": "Login Token"
                                    }
                                },
                                "required": [
                                    "email",
                                    "password"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Login successful"
                                            ]
                                        },
                                        "user": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "email": {
                                                    "type": "string"
                                                },
                                                "role": {
                                                    "type": "string"
                                                },
                                                "email_verified_at": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "id",
                                                "name",
                                                "email",
                                                "role",
                                                "email_verified_at"
                                            ]
                                        },
                                        "token": {
                                            "type": "string"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "enum": [
                                                "Bearer"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "user",
                                        "token",
                                        "token_type"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "The provided credentials do not match our records."
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/forgot-password": {
            "post": {
                "operationId": "auth.forgotPassword",
                "summary": "Send password reset link",
                "tags": [
                    "Auth"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    }
                                },
                                "required": [
                                    "email"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Unable to send password reset link."
                                            ]
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "error"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Password reset link sent to your email."
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/reset-password": {
            "post": {
                "operationId": "auth.resetPassword",
                "summary": "Reset password using token",
                "tags": [
                    "Auth"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "token": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "type": "string"
                                    },
                                    "password_confirmation": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "token",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Unable to reset password."
                                            ]
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "error"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Password has been reset successfully."
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "operationId": "auth.logout",
                "summary": "Logout user and revoke current token",
                "tags": [
                    "Auth"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Logout successful - token revoked"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/user": {
            "get": {
                "operationId": "auth.user",
                "summary": "Get authenticated user details",
                "tags": [
                    "Auth"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "user": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "email": {
                                                    "type": "string"
                                                },
                                                "role": {
                                                    "type": "string"
                                                },
                                                "email_verified_at": {
                                                    "type": "string"
                                                },
                                                "contact_info": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "id",
                                                "name",
                                                "email",
                                                "role",
                                                "email_verified_at",
                                                "contact_info"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "user"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/user/profile-information": {
            "put": {
                "operationId": "auth.updateProfile",
                "summary": "Update user profile information",
                "tags": [
                    "Auth"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "maxLength": 255
                                    }
                                },
                                "required": [
                                    "name",
                                    "email"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Profile updated successfully."
                                            ]
                                        },
                                        "user": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "email": {
                                                    "type": "string"
                                                },
                                                "role": {
                                                    "type": "string"
                                                },
                                                "email_verified_at": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "id",
                                                "name",
                                                "email",
                                                "role",
                                                "email_verified_at"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "user"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/user/password": {
            "put": {
                "operationId": "auth.updatePassword",
                "summary": "Update user password",
                "tags": [
                    "Auth"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "current_password": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    },
                                    "password_confirmation": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "current_password",
                                    "password",
                                    "password_confirmation"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Password updated successfully."
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/buildings/stats": {
            "get": {
                "operationId": "building.stats",
                "summary": "Get building statistics based on user's entitlements",
                "tags": [
                    "Building"
                ],
                "parameters": [
                    {
                        "name": "entitlement_filters",
                        "in": "query",
                        "description": "Get entitlement filters from middleware",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "total_buildings": {
                                            "type": "string"
                                        },
                                        "anomaly_buildings": {
                                            "type": "string"
                                        },
                                        "normal_buildings": {
                                            "type": "string"
                                        },
                                        "avg_confidence": {
                                            "type": "string"
                                        },
                                        "avg_co2_savings": {
                                            "type": "string"
                                        },
                                        "by_classification": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "total_buildings",
                                        "anomaly_buildings",
                                        "normal_buildings",
                                        "avg_confidence",
                                        "avg_co2_savings",
                                        "by_classification"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/buildings/within/bounds": {
            "get": {
                "operationId": "building.withinBounds",
                "summary": "Get buildings within a specific geographic area (bounding box)",
                "tags": [
                    "Building"
                ],
                "parameters": [
                    {
                        "name": "north",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "south",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "east",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "west",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "entitlement_filters",
                        "in": "query",
                        "description": "Get entitlement filters from middleware",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": 1000
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/BuildingResource"
                                            }
                                        },
                                        "count": {
                                            "type": "string"
                                        },
                                        "bbox": {
                                            "type": "object",
                                            "properties": {
                                                "north": {
                                                    "type": "string"
                                                },
                                                "south": {
                                                    "type": "string"
                                                },
                                                "east": {
                                                    "type": "string"
                                                },
                                                "west": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "north",
                                                "south",
                                                "east",
                                                "west"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "count",
                                        "bbox"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/buildings/{gid}/find-page": {
            "get": {
                "operationId": "building.findPage",
                "summary": "Find the page number where a specific building appears in the filtered results",
                "tags": [
                    "Building"
                ],
                "parameters": [
                    {
                        "name": "gid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "entitlement_filters",
                        "in": "query",
                        "description": "Get entitlement filters from middleware",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "dataset_id",
                        "in": "query",
                        "description": "Apply the same filters as the main listing",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "anomaly_filter",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Apply same sorting",
                        "schema": {
                            "type": "string",
                            "default": "gid"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": "asc"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "page": {
                                            "type": "string"
                                        },
                                        "position": {
                                            "type": "string"
                                        },
                                        "per_page": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "page",
                                        "position",
                                        "per_page"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Building not found in current filter set"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/buildings": {
            "get": {
                "operationId": "building.index",
                "summary": "Get filtered buildings based on user's entitlements",
                "tags": [
                    "Building"
                ],
                "parameters": [
                    {
                        "name": "entitlement_filters",
                        "in": "query",
                        "description": "Get entitlement filters from middleware",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": 15
                        }
                    },
                    {
                        "name": "dataset_id",
                        "in": "query",
                        "description": "Apply additional filters",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "anomaly_filter",
                        "in": "query",
                        "description": "Anomaly filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Building type filter (as specified in DATA.md)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Apply sorting (sort_by and sort_order as specified in DATA.md)",
                        "schema": {
                            "type": "string",
                            "default": "gid"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": "asc"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transform using BuildingResource for clean JSON format\n\n\n\n`AnonymousResourceCollection`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/BuildingResource"
                                                    }
                                                }
                                            },
                                            "required": [
                                                "data"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "No data access authorized"
                                                    ]
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "minItems": 0,
                                                    "maxItems": 0,
                                                    "additionalItems": false
                                                },
                                                "meta": {
                                                    "type": "object",
                                                    "properties": {
                                                        "total": {
                                                            "type": "integer",
                                                            "enum": [
                                                                0
                                                            ]
                                                        },
                                                        "per_page": {
                                                            "type": "string"
                                                        },
                                                        "current_page": {
                                                            "type": "integer",
                                                            "enum": [
                                                                1
                                                            ]
                                                        }
                                                    },
                                                    "required": [
                                                        "total",
                                                        "per_page",
                                                        "current_page"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "message",
                                                "data",
                                                "meta"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/buildings/{gid}": {
            "get": {
                "operationId": "building.show",
                "summary": "Get details of a specific building",
                "tags": [
                    "Building"
                ],
                "parameters": [
                    {
                        "name": "gid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "entitlement_filters",
                        "in": "query",
                        "description": "Get entitlement filters from middleware",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return using BuildingResource for clean JSON format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/BuildingResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Building not found or access denied"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/buildings/within/bounds": {
            "get": {
                "operationId": "admin.building.withinBounds",
                "summary": "Get buildings within a specific geographic area for admin users.\nAdmin users see all buildings without entitlement filtering",
                "tags": [
                    "Building"
                ],
                "parameters": [
                    {
                        "name": "north",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "south",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "east",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "west",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": 1000
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/BuildingResource"
                                            }
                                        },
                                        "count": {
                                            "type": "string"
                                        },
                                        "bbox": {
                                            "type": "object",
                                            "properties": {
                                                "north": {
                                                    "type": "string"
                                                },
                                                "south": {
                                                    "type": "string"
                                                },
                                                "east": {
                                                    "type": "string"
                                                },
                                                "west": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "north",
                                                "south",
                                                "east",
                                                "west"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "count",
                                        "bbox"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/buildings/{gid}/find-page": {
            "get": {
                "operationId": "admin.building.findPage",
                "summary": "Find the page number where a specific building appears in the filtered results",
                "tags": [
                    "Building"
                ],
                "parameters": [
                    {
                        "name": "gid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "anomaly_filter",
                        "in": "query",
                        "description": "Apply anomaly filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Apply same sorting as main listing",
                        "schema": {
                            "type": "string",
                            "default": "gid"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": "asc"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "page": {
                                            "type": "string"
                                        },
                                        "position": {
                                            "type": "string"
                                        },
                                        "per_page": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "page",
                                        "position",
                                        "per_page"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Building not found in current filter set"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/buildings": {
            "get": {
                "operationId": "admin.building.index",
                "summary": "Display a listing of buildings for admin viewing (web view)",
                "tags": [
                    "Building"
                ],
                "responses": {
                    "200": {
                        "description": "Otherwise return the web view",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/BuildingResource"
                                                    }
                                                },
                                                "meta": {
                                                    "type": "object",
                                                    "properties": {
                                                        "current_page": {
                                                            "type": "string"
                                                        },
                                                        "last_page": {
                                                            "type": "string"
                                                        },
                                                        "per_page": {
                                                            "type": "string"
                                                        },
                                                        "total": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "current_page",
                                                        "last_page",
                                                        "per_page",
                                                        "total"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "data",
                                                "meta"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/buildings/{gid}": {
            "get": {
                "operationId": "admin.building.show",
                "summary": "Show a specific building (API endpoint)",
                "tags": [
                    "Building"
                ],
                "parameters": [
                    {
                        "name": "gid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`BuildingResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BuildingResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Building not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/buildings/export": {
            "get": {
                "operationId": "building.export",
                "summary": "Export buildings data (placeholder for future implementation)",
                "tags": [
                    "Building"
                ],
                "responses": {
                    "200": {
                        "description": "This is a placeholder - actual export functionality would be implemented in Phase 2",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Export functionality will be implemented in Phase 2"
                                            ]
                                        },
                                        "note": {
                                            "type": "string",
                                            "enum": [
                                                "This endpoint is ready for CSV/Excel export implementation"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "note"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/datasets/stats": {
            "get": {
                "operationId": "dataset.stats",
                "summary": "Get dataset statistics",
                "tags": [
                    "Dataset"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "total_datasets": {
                                            "type": "string"
                                        },
                                        "by_data_type": {
                                            "type": "string"
                                        },
                                        "datasets_with_entitlements": {
                                            "type": "string"
                                        },
                                        "datasets_without_entitlements": {
                                            "type": "string"
                                        },
                                        "recent_datasets": {
                                            "type": "string"
                                        },
                                        "most_used_datasets": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "total_datasets",
                                        "by_data_type",
                                        "datasets_with_entitlements",
                                        "datasets_without_entitlements",
                                        "recent_datasets",
                                        "most_used_datasets"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/datasets/data-types": {
            "get": {
                "operationId": "dataset.dataTypes",
                "summary": "Get available data types for filter dropdown",
                "tags": [
                    "Dataset"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data_types": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "minItems": 0,
                                            "maxItems": 0,
                                            "additionalItems": false
                                        }
                                    },
                                    "required": [
                                        "data_types"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/datasets": {
            "get": {
                "operationId": "datasets.index",
                "summary": "Get a paginated list of all datasets",
                "tags": [
                    "Dataset"
                ],
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": 15
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "data_type",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/DatasetResource"
                                            }
                                        },
                                        "current_page": {
                                            "type": "string"
                                        },
                                        "per_page": {
                                            "type": "string"
                                        },
                                        "total": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "current_page",
                                        "per_page",
                                        "total"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "post": {
                "operationId": "datasets.store",
                "summary": "Create a new dataset",
                "tags": [
                    "Dataset"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "data_type": {
                                        "type": "string",
                                        "maxLength": 100
                                    },
                                    "description": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "maxLength": 1000
                                    },
                                    "storage_location": {
                                        "type": "string",
                                        "maxLength": 500
                                    },
                                    "version": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "maxLength": 50
                                    },
                                    "source": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "maxLength": 255
                                    },
                                    "format": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "maxLength": 100
                                    },
                                    "size_mb": {
                                        "type": [
                                            "number",
                                            "null"
                                        ],
                                        "minimum": 0
                                    },
                                    "spatial_resolution": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "maxLength": 100
                                    },
                                    "temporal_coverage": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "maxLength": 255
                                    }
                                },
                                "required": [
                                    "name",
                                    "data_type",
                                    "storage_location"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Dataset created successfully"
                                            ]
                                        },
                                        "dataset": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "dataset"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Validation failed"
                                            ]
                                        },
                                        "errors": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "errors"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/datasets/{id}": {
            "get": {
                "operationId": "datasets.show",
                "summary": "Get details of a specific dataset",
                "tags": [
                    "Dataset"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "dataset": {
                                            "$ref": "#/components/schemas/DatasetResource"
                                        }
                                    },
                                    "required": [
                                        "dataset"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Dataset not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "put": {
                "operationId": "datasets.update",
                "summary": "Update an existing dataset",
                "tags": [
                    "Dataset"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "data_type": {
                                        "type": "string",
                                        "maxLength": 100
                                    },
                                    "description": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "maxLength": 1000
                                    },
                                    "storage_location": {
                                        "type": "string",
                                        "maxLength": 500
                                    },
                                    "version": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "maxLength": 50
                                    },
                                    "source": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "maxLength": 255
                                    },
                                    "format": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "maxLength": 100
                                    },
                                    "size_mb": {
                                        "type": [
                                            "number",
                                            "null"
                                        ],
                                        "minimum": 0
                                    },
                                    "spatial_resolution": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "maxLength": 100
                                    },
                                    "temporal_coverage": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "maxLength": 255
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Dataset updated successfully"
                                            ]
                                        },
                                        "dataset": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "dataset"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Validation failed"
                                            ]
                                        },
                                        "errors": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "errors"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Dataset not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "delete": {
                "operationId": "datasets.destroy",
                "summary": "Delete a dataset",
                "tags": [
                    "Dataset"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Dataset deleted successfully"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Dataset not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/downloads/{id}": {
            "get": {
                "operationId": "download.download",
                "summary": "Download building data in specified format",
                "tags": [
                    "Download"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Dataset ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "2. Entitlement & Format Check",
                        "schema": {
                            "type": "string",
                            "default": "csv"
                        }
                    },
                    {
                        "name": "building_gid",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "An error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "description": "Error overview.",
                                                    "example": "Invalid format. Supported formats: csv, geojson"
                                                }
                                            },
                                            "required": [
                                                "message"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "description": "Error overview.",
                                                    "example": "Unsupported format"
                                                }
                                            },
                                            "required": [
                                                "message"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "An error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "description": "Error overview.",
                                                    "example": "You do not have permission to download data in this format"
                                                }
                                            },
                                            "required": [
                                                "message"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "description": "Error overview.",
                                                    "example": "You do not have permission to access this dataset"
                                                }
                                            },
                                            "required": [
                                                "message"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/entitlements/datasets": {
            "get": {
                "operationId": "entitlement.datasets",
                "summary": "Get all available datasets for entitlement creation",
                "tags": [
                    "Entitlement"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "datasets": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "datasets"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/entitlements/stats": {
            "get": {
                "operationId": "entitlement.stats",
                "summary": "Get entitlement statistics",
                "tags": [
                    "Entitlement"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "total_entitlements": {
                                            "type": "string"
                                        },
                                        "active_entitlements": {
                                            "type": "string"
                                        },
                                        "expired_entitlements": {
                                            "type": "string"
                                        },
                                        "by_type": {
                                            "type": "string"
                                        },
                                        "by_dataset": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "total_entitlements",
                                        "active_entitlements",
                                        "expired_entitlements",
                                        "by_type",
                                        "by_dataset"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/entitlements": {
            "get": {
                "operationId": "entitlements.index",
                "summary": "Get a paginated list of all entitlements",
                "tags": [
                    "Entitlement"
                ],
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": 15
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "dataset_id",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/EntitlementResource"
                                            }
                                        },
                                        "current_page": {
                                            "type": "string"
                                        },
                                        "per_page": {
                                            "type": "string"
                                        },
                                        "total": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "current_page",
                                        "per_page",
                                        "total"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "post": {
                "operationId": "entitlements.store",
                "summary": "Create a new entitlement",
                "tags": [
                    "Entitlement"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "DS-ALL",
                                            "DS-AOI",
                                            "DS-BLD",
                                            "TILES"
                                        ]
                                    },
                                    "dataset_id": {
                                        "type": "integer"
                                    },
                                    "expires_at": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "format": "date-time"
                                    },
                                    "aoi_coordinates": {
                                        "type": "array",
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "type": "number"
                                            },
                                            "minItems": 2,
                                            "maxItems": 2
                                        },
                                        "minItems": 3
                                    },
                                    "building_gids": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "download_formats": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "enum": [
                                                "csv",
                                                "geojson"
                                            ]
                                        }
                                    }
                                },
                                "required": [
                                    "type",
                                    "dataset_id"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Entitlement created successfully"
                                            ]
                                        },
                                        "entitlement": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "entitlement"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Validation failed"
                                                    ]
                                                },
                                                "errors": {
                                                    "type": "object",
                                                    "properties": {
                                                        "aoi_coordinates": {
                                                            "type": "array",
                                                            "prefixItems": [
                                                                {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "Invalid AOI coordinates format. Please check your coordinate values."
                                                                    ]
                                                                }
                                                            ],
                                                            "minItems": 1,
                                                            "maxItems": 1,
                                                            "additionalItems": false
                                                        }
                                                    },
                                                    "required": [
                                                        "aoi_coordinates"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "message",
                                                "errors"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Validation failed"
                                                    ]
                                                },
                                                "errors": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "message",
                                                "errors"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Dataset not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/entitlements/{id}": {
            "get": {
                "operationId": "entitlements.show",
                "summary": "Get details of a specific entitlement",
                "tags": [
                    "Entitlement"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "entitlement": {
                                            "$ref": "#/components/schemas/EntitlementResource"
                                        }
                                    },
                                    "required": [
                                        "entitlement"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Entitlement not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "put": {
                "operationId": "entitlements.update",
                "summary": "Update an existing entitlement",
                "tags": [
                    "Entitlement"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "DS-ALL",
                                            "DS-AOI",
                                            "DS-BLD",
                                            "TILES"
                                        ]
                                    },
                                    "dataset_id": {
                                        "type": "integer"
                                    },
                                    "expires_at": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "format": "date-time"
                                    },
                                    "aoi_coordinates": {
                                        "type": "array",
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "type": "number"
                                            },
                                            "minItems": 2,
                                            "maxItems": 2
                                        },
                                        "minItems": 3
                                    },
                                    "building_gids": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "download_formats": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "enum": [
                                                "csv",
                                                "geojson"
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Entitlement updated successfully"
                                            ]
                                        },
                                        "entitlement": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "entitlement"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Validation failed"
                                                    ]
                                                },
                                                "errors": {
                                                    "type": "object",
                                                    "properties": {
                                                        "aoi_coordinates": {
                                                            "type": "array",
                                                            "prefixItems": [
                                                                {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "Invalid AOI coordinates format. Please check your coordinate values."
                                                                    ]
                                                                }
                                                            ],
                                                            "minItems": 1,
                                                            "maxItems": 1,
                                                            "additionalItems": false
                                                        }
                                                    },
                                                    "required": [
                                                        "aoi_coordinates"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "message",
                                                "errors"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Validation failed"
                                                    ]
                                                },
                                                "errors": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "message",
                                                "errors"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Entitlement not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "delete": {
                "operationId": "entitlements.destroy",
                "summary": "Delete an entitlement",
                "tags": [
                    "Entitlement"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Entitlement deleted successfully"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Entitlement not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/tokens/generate": {
            "post": {
                "operationId": "token.generate",
                "summary": "Generate a new API token for the authenticated user",
                "tags": [
                    "Token"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "token": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "API token generated successfully"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "token",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "You already have an active API token. Please revoke it before generating a new one."
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/tokens": {
            "get": {
                "operationId": "token.index",
                "summary": "List all API tokens for the authenticated user",
                "tags": [
                    "Token"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "tokens": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "tokens"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/tokens/{tokenId}": {
            "delete": {
                "operationId": "token.revoke",
                "summary": "Revoke a specific API token",
                "tags": [
                    "Token"
                ],
                "parameters": [
                    {
                        "name": "tokenId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "API token revoked successfully"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Token not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/users": {
            "get": {
                "operationId": "users.index",
                "summary": "Display a listing of users with optional search and filtering",
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": 15
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "role",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `UserResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/UserResource"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ]
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "links": {
                                                    "type": "array",
                                                    "description": "Generated paginator links.",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "url": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "label": {
                                                                "type": "string"
                                                            },
                                                            "active": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "required": [
                                                            "url",
                                                            "label",
                                                            "active"
                                                        ]
                                                    }
                                                },
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "to": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ],
                                                    "description": "Number of the last item in the slice."
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "description": "Total number of items being paginated."
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "from",
                                                "last_page",
                                                "links",
                                                "path",
                                                "per_page",
                                                "to",
                                                "total"
                                            ]
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "last": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "prev": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "next": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "first",
                                                "last",
                                                "prev",
                                                "next"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "post": {
                "operationId": "users.store",
                "summary": "Store a newly created user",
                "tags": [
                    "User"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "maxLength": 255
                                    },
                                    "password": {
                                        "type": "string"
                                    },
                                    "role": {
                                        "type": "string",
                                        "enum": [
                                            "user",
                                            "researcher",
                                            "contractor",
                                            "municipality",
                                            "admin"
                                        ]
                                    },
                                    "phone": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "maxLength": 50
                                    },
                                    "company": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "maxLength": 255
                                    },
                                    "department": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "maxLength": 255
                                    },
                                    "address": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "maxLength": 500
                                    }
                                },
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "role"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "User created successfully"
                                            ]
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/UserResource"
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "user"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Validation failed"
                                            ]
                                        },
                                        "errors": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "errors"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/users/{id}": {
            "get": {
                "operationId": "users.show",
                "summary": "Display the specified user with their entitlements and recent audit logs",
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "user": {
                                            "$ref": "#/components/schemas/UserResource"
                                        },
                                        "active_entitlements_count": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "user",
                                        "active_entitlements_count"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "User not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "put": {
                "operationId": "users.update",
                "summary": "Update the specified user",
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "maxLength": 255
                                    },
                                    "password": {
                                        "type": "string"
                                    },
                                    "role": {
                                        "type": "string",
                                        "enum": [
                                            "user",
                                            "researcher",
                                            "contractor",
                                            "municipality",
                                            "admin"
                                        ]
                                    },
                                    "phone": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "maxLength": 50
                                    },
                                    "company": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "maxLength": 255
                                    },
                                    "department": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "maxLength": 255
                                    },
                                    "address": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "maxLength": 500
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "User updated successfully"
                                            ]
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/UserResource"
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "user"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Validation failed"
                                            ]
                                        },
                                        "errors": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "errors"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "User not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "delete": {
                "operationId": "users.destroy",
                "summary": "Delete a user",
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "User deleted successfully"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "message"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "You cannot delete your own account"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "message"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "User not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/users/{id}/entitlements": {
            "get": {
                "operationId": "user.entitlements",
                "summary": "Get user's entitlements",
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "user_id": {
                                            "type": "string"
                                        },
                                        "entitlements": {
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "user_id",
                                        "entitlements"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "User not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/admin/users/{userId}/entitlements/{entitlementId}": {
            "post": {
                "operationId": "user.assignEntitlement",
                "summary": "Assign an entitlement to a user",
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "entitlementId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Entitlement assigned successfully"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Entitlement already assigned to user"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Entitlement not found"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "message"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "User not found"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "message"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "delete": {
                "operationId": "user.removeEntitlement",
                "summary": "Remove an entitlement from a user",
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "entitlementId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Entitlement removed successfully"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Entitlement was not assigned to this user"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "User not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/webhooks/analysis-complete": {
            "post": {
                "operationId": "webhook.analysisComplete",
                "summary": "Handle analysis job completion webhook from external analysis service",
                "tags": [
                    "Webhook"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "external_job_id": {
                                        "type": "string"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "completed",
                                            "failed"
                                        ]
                                    },
                                    "output_csv_url": {
                                        "type": "string",
                                        "format": "uri"
                                    },
                                    "error_message": {
                                        "type": "string"
                                    },
                                    "metadata": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "external_job_id",
                                    "status"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Internal server error"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Webhook processed successfully"
                                            ]
                                        },
                                        "analysis_job_id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "analysis_job_id",
                                        "status"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Analysis job not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Invalid webhook payload"
                                            ]
                                        },
                                        "errors": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "errors"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/webhooks/health": {
            "get": {
                "operationId": "webhook.healthCheck",
                "summary": "Health check endpoint for webhook service",
                "tags": [
                    "Webhook"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "ok"
                                            ]
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        },
                                        "service": {
                                            "type": "string",
                                            "enum": [
                                                "webhook-handler"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "timestamp",
                                        "service"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/webhooks/test": {
            "post": {
                "operationId": "webhook.test",
                "summary": "Test endpoint for webhook development/debugging",
                "tags": [
                    "Webhook"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Test webhook received"
                                            ]
                                        },
                                        "received_data": {
                                            "type": "string"
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "received_data",
                                        "timestamp"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AnalysisJobResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "status": {
                        "type": "string"
                    },
                    "input_source_links": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {}
                    },
                    "output_csv_url": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "external_job_id": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "metadata": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {}
                    },
                    "error_message": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "is_completed": {
                        "type": "boolean",
                        "description": "Computed attributes"
                    },
                    "has_failed": {
                        "type": "boolean"
                    },
                    "is_running": {
                        "type": "boolean"
                    },
                    "started_at": {
                        "type": "string",
                        "description": "Timestamps"
                    },
                    "completed_at": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "status",
                    "input_source_links",
                    "output_csv_url",
                    "external_job_id",
                    "metadata",
                    "error_message",
                    "is_completed",
                    "has_failed",
                    "is_running",
                    "started_at",
                    "completed_at",
                    "created_at",
                    "updated_at"
                ],
                "title": "AnalysisJobResource"
            },
            "AuditLogResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "user_id": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "action": {
                        "type": "string"
                    },
                    "target_type": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "target_id": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "old_values": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {}
                    },
                    "new_values": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {}
                    },
                    "ip_address": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "user_agent": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "user": {
                        "description": "Relationships",
                        "$ref": "#/components/schemas/UserResource"
                    },
                    "created_at": {
                        "type": "string",
                        "description": "Timestamps"
                    }
                },
                "required": [
                    "id",
                    "user_id",
                    "action",
                    "target_type",
                    "target_id",
                    "old_values",
                    "new_values",
                    "ip_address",
                    "user_agent",
                    "created_at"
                ],
                "title": "AuditLogResource"
            },
            "BuildingResource": {
                "type": "object",
                "properties": {
                    "gid": {
                        "type": "string"
                    },
                    "thermal_loss_index_tli": {
                        "type": "string",
                        "description": "Legacy TLI field (for backward compatibility)"
                    },
                    "average_heatloss": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "New anomaly detection fields"
                    },
                    "reference_heatloss": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "heatloss_difference": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "abs_heatloss_difference": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "threshold": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "is_anomaly": {
                        "type": "boolean"
                    },
                    "confidence": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "building_type_classification": {
                        "type": "string",
                        "description": "Common building attributes"
                    },
                    "co2_savings_estimate": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "address": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "owner_operator_details": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "cadastral_reference": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "dataset_id": {
                        "type": "integer"
                    },
                    "last_analyzed_at": {
                        "type": "string"
                    },
                    "before_renovation_tli": {
                        "type": "string"
                    },
                    "after_renovation_tli": {
                        "type": "string"
                    },
                    "tli_color": {
                        "type": "string",
                        "description": "Calculated attributes"
                    },
                    "anomaly_color": {
                        "type": "string",
                        "description": "Now supports both TLI and anomaly coloring"
                    },
                    "anomaly_severity": {
                        "type": "string"
                    },
                    "improvement_potential": {
                        "type": "string"
                    },
                    "is_high_confidence_anomaly": {
                        "type": "boolean"
                    },
                    "dataset": {
                        "type": "object",
                        "description": "Dataset information when loaded",
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "name": {
                                "type": "string"
                            },
                            "data_type": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "id",
                            "name",
                            "data_type"
                        ]
                    },
                    "geometry": {
                        "type": "string",
                        "description": "Geometry only for specific endpoints (optional)"
                    },
                    "created_at": {
                        "type": "string",
                        "description": "Timestamps"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "required": [
                    "gid",
                    "thermal_loss_index_tli",
                    "average_heatloss",
                    "reference_heatloss",
                    "heatloss_difference",
                    "abs_heatloss_difference",
                    "threshold",
                    "is_anomaly",
                    "confidence",
                    "building_type_classification",
                    "co2_savings_estimate",
                    "address",
                    "owner_operator_details",
                    "cadastral_reference",
                    "dataset_id",
                    "last_analyzed_at",
                    "before_renovation_tli",
                    "after_renovation_tli",
                    "tli_color",
                    "anomaly_color",
                    "anomaly_severity",
                    "improvement_potential",
                    "is_high_confidence_anomaly",
                    "created_at",
                    "updated_at"
                ],
                "title": "BuildingResource"
            },
            "DatasetResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "data_type": {
                        "type": "string"
                    },
                    "storage_location": {
                        "type": "string"
                    },
                    "version": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "metadata": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {}
                    },
                    "entitlements": {
                        "type": "array",
                        "description": "Relationships",
                        "items": {
                            "$ref": "#/components/schemas/EntitlementResource"
                        }
                    },
                    "buildings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BuildingResource"
                        }
                    },
                    "entitlements_count": {
                        "type": "integer"
                    },
                    "buildings_count": {
                        "type": "integer"
                    },
                    "created_at": {
                        "type": "string",
                        "description": "Timestamps"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "description",
                    "data_type",
                    "storage_location",
                    "version",
                    "metadata",
                    "created_at",
                    "updated_at"
                ],
                "title": "DatasetResource"
            },
            "EntitlementResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "type": {
                        "type": "string"
                    },
                    "dataset_id": {
                        "type": "integer"
                    },
                    "aoi_geom": {
                        "type": "string"
                    },
                    "building_gids": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {}
                    },
                    "download_formats": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {}
                    },
                    "expires_at": {
                        "type": "string"
                    },
                    "is_expired": {
                        "type": "boolean",
                        "description": "Computed attributes"
                    },
                    "is_active": {
                        "type": "boolean"
                    },
                    "dataset": {
                        "description": "Relationships",
                        "$ref": "#/components/schemas/DatasetResource"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserResource"
                        }
                    },
                    "users_count": {
                        "type": "integer"
                    },
                    "created_at": {
                        "type": "string",
                        "description": "Timestamps"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "type",
                    "dataset_id",
                    "building_gids",
                    "download_formats",
                    "expires_at",
                    "is_expired",
                    "is_active",
                    "created_at",
                    "updated_at"
                ],
                "title": "EntitlementResource"
            },
            "UserResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "role": {
                        "type": "string"
                    },
                    "contact_info": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {}
                    },
                    "email_verified_at": {
                        "type": "string"
                    },
                    "entitlements": {
                        "type": "array",
                        "description": "Relationships",
                        "items": {
                            "$ref": "#/components/schemas/EntitlementResource"
                        }
                    },
                    "entitlements_count": {
                        "type": "integer"
                    },
                    "created_at": {
                        "type": "string",
                        "description": "Timestamps"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "email",
                    "role",
                    "contact_info",
                    "email_verified_at",
                    "created_at",
                    "updated_at"
                ],
                "title": "UserResource"
            }
        },
        "responses": {
            "ValidationException": {
                "description": "Validation error",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Errors overview."
                                },
                                "errors": {
                                    "type": "object",
                                    "description": "A detailed description of each field that failed validation.",
                                    "additionalProperties": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "required": [
                                "message",
                                "errors"
                            ]
                        }
                    }
                }
            },
            "AuthenticationException": {
                "description": "Unauthenticated",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error overview."
                                }
                            },
                            "required": [
                                "message"
                            ]
                        }
                    }
                }
            },
            "ModelNotFoundException": {
                "description": "Not found",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error overview."
                                }
                            },
                            "required": [
                                "message"
                            ]
                        }
                    }
                }
            }
        }
    }
}