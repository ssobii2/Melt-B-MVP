name: Laravel CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: ⬇️ Checkout code
      uses: actions/checkout@v4

    - name: 🐘 Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, bcmath, xml, ctype, fileinfo, pdo_pgsql, redis, gd, zip, intl
        ini-values: post_max_size=256M, upload_max_filesize=256M, memory_limit=512M

    - name: 🧙 Install Composer dependencies
      run: composer install --no-interaction --prefer-dist --optimize-autoloader --no-dev

    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: 📦 Install Node dependencies
      run: npm ci

    - name: ⚡ Build frontend
      run: npm run build

    - name: 🗝️ Setup Laravel .env and key
      run: |
        cp .env.example .env
        php artisan key:generate

    - name: 📦 Create zip artifact
      run: |
        mkdir -p artifact
        zip -r artifact/melt-deploy.zip . -x "node_modules/*" "tests/*" ".git/*" ".github/*" "artifact/*"

    - name: 📤 Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: melt-deploy
        path: artifact/melt-deploy.zip

  deploy:
    name: 🚀 Deploy to Server
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - name: 📥 Download artifact
      uses: actions/download-artifact@v4
      with:
        name: melt-deploy
        path: ./deploy

    - name: 🧼 Flatten deploy path
      run: mv ./deploy/melt-deploy.zip ./melt-deploy.zip

    - name: 🛰️ Upload artifact to server via SCP
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.DEPLOY_HOST }}
        username: ${{ secrets.DEPLOY_USER }}
        key: ${{ secrets.DEPLOY_KEY }}
        source: melt-deploy.zip
        target: /home/runcloud/deploy/

    - name: 📡 SSH Deploy and Extract
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.DEPLOY_HOST }}
        username: ${{ secrets.DEPLOY_USER }}
        key: ${{ secrets.DEPLOY_KEY }}
        script: |
          cd /home/runcloud/webapps/Melt-B-MVP
          /RunCloud/Packages/php82rc/bin/php artisan down || true

          # Create backup directory if it doesn't exist
          mkdir -p /home/runcloud/storage_backup

          # Move storage/data directory to backup location if it exists
          if [ -d "storage/data" ]; then
            echo "📁 Moving storage/data directory to backup..."
            mv storage/data /home/runcloud/storage_backup/
          fi

          shopt -s dotglob
          rm -rf -- *
          shopt -u dotglob

          unzip /home/runcloud/deploy/melt-deploy.zip -d .

          # Move storage/data directory back from backup if it exists
          if [ -d "/home/runcloud/storage_backup/data" ]; then
            echo "📁 Moving storage/data directory back from backup..."
            mkdir -p storage
            mv /home/runcloud/storage_backup/data storage/
          fi

          /RunCloud/Packages/php82rc/bin/php artisan migrate --force
          /RunCloud/Packages/php82rc/bin/php artisan db:seed --force
          /RunCloud/Packages/php82rc/bin/php artisan adminlte:install --only=assets --force
          /RunCloud/Packages/php82rc/bin/php artisan config:cache
          /RunCloud/Packages/php82rc/bin/php artisan route:cache
          /RunCloud/Packages/php82rc/bin/php artisan view:cache
          /RunCloud/Packages/php82rc/bin/php artisan storage:link
          /RunCloud/Packages/php82rc/bin/php artisan up

          rm -rf /home/runcloud/deploy
